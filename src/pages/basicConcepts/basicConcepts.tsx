import React from "react";
import classNames from "classnames/bind";
import styles from "./basicConcepts.module.scss";

const cx = classNames.bind(styles);

const BasicConcepts: React.FC = () => {
  return (
    <div className={cx('container')}>
      <h4 className={cx('headline')}>Основні поняття та визначення</h4>
      <p>Для полегшення розуміння наведемо необхідні для подальшого викладу поняття і визначення.</p>
      <p>Алгоритм – це формально описана обчислювана процедура, що отримує вхідні дані (що називаються входом алгоритму) 
        та надає результати обчислень на вихід. Першим алгоритмом, що дійшов до людства, є відомий алгоритм Евкліда – 
        скінченна послідовність елементарних кроків для знаходження найбільшого спільного дільника. </p>
      <p>Властивості алгоритмів:</p>
      <ul>
        <li>Дискретність (Ця властивість вказує, що будь-який алгоритм повинен складатися з кінцевих дій, наступних в певному порядку);</li>
        <li>Фінітність (Алгоритм є скінченним об'єктом, що є необхідною умовою його механічної реалізовності);</li>
        <li>Детермінованість (Вказує, що будь-яка дія алгоритму має бути строго і недвозначно визначено у кожному випадку);</li>
        <li>Результативність (Алгоритм має засоби, які дозволяють відбирати з даних, отриманих на певному кроці виконання, результативні, після чого алгоритм зупиниться);</li>
        <li>Масовість (Один і той же алгоритм можна використовувати з різними вихідними даними).</li>
      </ul>
      <p>Для подальшого уточнення алгоритму треба вказати множину його початкових даних та множину даних, до яких належать результати. Ці множини називають також множиною вхідних
         даних і множиною вихідних даних алгоритму. </p>
      <p>Під <b>формальною системою</b> (ФС) розуміють трійку (L, A, P), де L – мова формальної системи, A – множина аксіом, P – множина правил виведення. Мова задається алфавітом 
        та правилами побудови слів мови, які називаються формулами</p>
      <p>Функція <b>алгоритмічно обчислювана</b> (АОФ), якщо існує алгоритм, який її обчислює. </p>
      <p>Множина L <b>алгоритмічно перелічна</b>, якщо L є множиною значень деякої АОФ, тобто існує алгоритм, який перелічує елементи множини L і тільки їх. </p>
      <p>Множина L <b>алгоритмічно розв'язна</b> відносно множини U, якщо існує алгоритм, який дозволяє для кожного x&#8714;U визначати, x&#8714;L чи x&#8713;L. </p>
      <p>Традиційними композиціями над предикатами (логічними операціями) є логiчні зв'язки <i>диз'юнкцiя</i> &#8744;, <i>кон'юнкцiя</i> &#38;, <i>заперечення</i> &#172;,
         <i>iмплiкацiя</i> &#8594;, <i>еквiваленцiя</i> &#8596; та композиції <i>квантифікації</i>  &#8707;x, &#8704;x. Для квазіарних предикатів визначення цих композицій
          цілком узгоджені з визначеннями відповідних логічних операцій класичної логіки, але вони враховують частковість предикатів.</p>
    </div>
  );
};

export default BasicConcepts;
